package com.jm.hrhelper.greendao.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import com.jm.hrhelper.greendao.entity.Staff;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 *  Created by mingtingjie on 18/4/23.
*/
public class SalaryDao extends AbstractDao<Staff, Long> {

    public static final String TABLENAME = "Staff";

    /**
     * Properties of entity Staff.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     *
     * private String StaffNO;//员工编号
     private String StaffName;//员工Name
     private String StaffCardNo;//员工身份证号码
     private String StaffEmail;//邮箱
     private String StaffTel;//员工手机号码
     private String StaffCompany;//员工隶属的的子公司名称,或者隶属的分公司名称
     private String StaffBumen;//部门
     private String StaffZhiwu;//职务
     private String StaffGrade;//职务等级
     private int StaffBaseSalary;//员工基本薪酬
     private int StaffSheBaoBase;//社保缴费基数
     private int StaffPublicFundBase;//公积金缴纳基数
     private String StaffSubsidyGrade;//补助标准级别  大企业，老国企，央企可能用到吧
     private int StaffBaseEatSubsidy;//饭补：元/餐
     private int StaffBaseHouseSubsidy;//住房补助：元/月
     private int StaffBaseTelSubsidy;//电话补助：元/月
     private int StaffBaseTrafficSubsidy;//交通补助： 元/月
     private String StaffReserved1;//预留字段1
     private String StaffReserved2;//预留字段2
     private String StaffReserved3;//预留字段3
     private String StaffReserved4;//预留字段4
     private String StaffReserved5;//预留字段5
     */
    public static class Properties {
        public final static Property _id = new Property(0, Long.class, "_id", true, "_id");
        public final static Property StaffNO = new Property(1, String.class, "StaffNO", false, "STAFFNO");
        public final static Property StaffName = new Property(2, String.class, "StaffName", false, "STAFFNAME");

        public final static Property StaffCardNo = new Property(3, String.class, "StaffCardNo", false, "STAFFCARDNO");
        public final static Property StaffEmail = new Property(4, String.class, "StaffEmail", false, "STAFFEMAIL");
        public final static Property StaffTel = new Property(5, String.class, "StaffTel", false, "STAFFTEL");
        public final static Property StaffCompany = new Property(6, String.class, "StaffCompany", false, "STAFFCOMPANY");
        public final static Property StaffBumen = new Property(7, String.class, "StaffBumen", false, "STAFFBUMEN");
        public final static Property StaffZhiwu = new Property(8, String.class, "StaffZhiwu", false, "STAFFZHIWU");
        public final static Property StaffGrade = new Property(9, String.class, "StaffGrade", false, "STAFFGRADE");
        public final static Property StaffBaseSalary = new Property(10, Integer.class, "StaffBaseSalary", false, "STAFFBASESALARY");
        public final static Property StaffSheBaoBase = new Property(11, Integer.class, "StaffSheBaoBase", false, "STAFFSHEBAOBASE");
        public final static Property StaffPublicFundBase = new Property(12, Integer.class, "StaffPublicFundBase", false, "STAFFPUBLICFUNDBASE");
        public final static Property StaffSubsidyGrade = new Property(13, String.class, "StaffSubsidyGrade", false, "STAFFSUBSIDYGRADE");
        public final static Property StaffBaseEatSubsidy = new Property(14, Integer.class, "StaffBaseEatSubsidy", false, "STAFFBASEEATSUBSIDY");
        public final static Property StaffBaseHouseSubsidy = new Property(15, Integer.class, "StaffBaseHouseSubsidy", false, "STAFFBASEHOUSESUBSIDY");
        public final static Property StaffBaseTelSubsidy = new Property(16, Integer.class, "StaffBaseTelSubsidy", false, "STAFFBASETELSUBSIDY");
        public final static Property StaffBaseTrafficSubsidy = new Property(17, Integer.class, "StaffBaseTrafficSubsidy", false, "STAFFBASETRAFFICSUBSIDY");
        public final static Property StaffReserved1 = new Property(18, String.class, "StaffReserved1", false, "STAFFRESERVED1");
        public final static Property StaffReserved2 = new Property(19, String.class, "StaffReserved2", false, "STAFFRESERVED2");
        public final static Property StaffReserved3 = new Property(20, String.class, "StaffReserved3", false, "STAFFRESERVED3");
        public final static Property StaffReserved4 = new Property(21, String.class, "StaffReserved4", false, "STAFFRESERVED4");
        public final static Property StaffReserved5 = new Property(22, String.class, "StaffReserved5", false, "STAFFRESERVED5");

    }


    public SalaryDao(DaoConfig config) {
        super(config);
    }

    public SalaryDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"Staff\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: _id
                "\"STAFFNO\" TEXT," + //1:STAFFNO
                "\"STAFFNAME\" TEXT NOT NULL," + // 2: STAFFNAME

                "\"STAFFCARDNO\" TEXT," + //3:STAFFCARDNO
                "\"STAFFEMAIL\" TEXT," + //4:STAFFEMAIL
                "\"STAFFTEL\" TEXT," + //5:STAFFTEL
                "\"STAFFCOMPANY\" TEXT," + //6:STAFFCOMPANY
                "\"STAFFBUMEN\" TEXT," + //7:STAFFBUMEN
                "\"STAFFZHIWU\" TEXT," + //8:STAFFZHIWU
                "\"STAFFGRADE\" TEXT," + //9:STAFFGRADE
                "\"STAFFBASESALARY\" INTEGER," + //10:STAFFBASESALARY
                "\"STAFFSHEBAOBASE\" INTEGER," + //11:STAFFSHEBAOBASE
                "\"STAFFPUBLICFUNDBASE\" INTERGER," + //12:STAFFPUBLICFUNDBASE
                "\"STAFFSUBSIDYGRADE\" TEXT," + //13:STAFFSUBSIDYGRADE
                "\"STAFFBASEEATSUBSIDY\" INTERGER," + //14:STAFFBASEEATSUBSIDY
                "\"STAFFBASEHOUSESUBSIDY\" INTERGER," + //15:STAFFBASEHOUSESUBSIDY
                "\"STAFFBASETELSUBSIDY\" INTERGER," + //16:STAFFBASETELSUBSIDY
                "\"STAFFBASETRAFFICSUBSIDY\" INTERGER," + //17:STAFFBASETRAFFICSUBSIDY
                "\"STAFFRESERVED1\" TEXT," + //18:STAFFRESERVED1
                "\"STAFFRESERVED2\" TEXT," + //19:STAFFRESERVED2
                "\"STAFFRESERVED3\" TEXT," + //20:STAFFRESERVED3
                "\"STAFFRESERVED4\" TEXT," + //21:STAFFRESERVED4

                "\"STAFFRESERVED5\" TEXT );"); // 22: STAFFRESERVED5
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"Staff\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Staff entity) {
        stmt.clearBindings();
 
        Long _id = entity.get_id();
        if (_id != null) {
            stmt.bindLong(1, _id);
        }

        stmt.bindString(2, entity.getStaffNO());
 
        String staffName = entity.getStaffName();
        if (staffName != null) {
            stmt.bindString(3, staffName);
        }

        stmt.bindString(4, entity.getStaffCardNo());
        stmt.bindString(5, entity.getStaffEmail());
        stmt.bindString(6, entity.getStaffTel());
        stmt.bindString(7, entity.getStaffCompany());
        stmt.bindString(8, entity.getStaffBumen());
        stmt.bindString(9, entity.getStaffZhiwu());
        stmt.bindString(10, entity.getStaffGrade());
        stmt.bindLong(11,entity.getStaffBaseSalary());
        stmt.bindLong(12, entity.getStaffSheBaoBase());
        stmt.bindLong(13, entity.getStaffPublicFundBase());
        stmt.bindString(14, entity.getStaffSubsidyGrade());
        stmt.bindLong(15, entity.getStaffBaseEatSubsidy());
        stmt.bindLong(16, entity.getStaffBaseHouseSubsidy());
        stmt.bindLong(17, entity.getStaffBaseTelSubsidy());
        stmt.bindLong(18, entity.getStaffBaseTrafficSubsidy());
        stmt.bindString(19, entity.getStaffReserved1());
        stmt.bindString(20, entity.getStaffReserved2());
        stmt.bindString(21, entity.getStaffReserved3());
        stmt.bindString(22, entity.getStaffReserved4());
        stmt.bindString(23, entity.getStaffReserved5());

    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Staff entity) {
        stmt.clearBindings();
 
        Long _id = entity.get_id();
        if (_id != null) {
            stmt.bindLong(1, _id);
        }

        stmt.bindString(2, entity.getStaffNO());

        String staffName = entity.getStaffName();
        if (staffName != null) {
            stmt.bindString(3, staffName);
        }
        stmt.bindString(4, entity.getStaffCardNo());
        stmt.bindString(5, entity.getStaffEmail());
        stmt.bindString(6, entity.getStaffTel());
        stmt.bindString(7, entity.getStaffCompany());
        stmt.bindString(8, entity.getStaffBumen());
        stmt.bindString(9, entity.getStaffZhiwu());
        stmt.bindString(10, entity.getStaffGrade());
        stmt.bindLong(11,entity.getStaffBaseSalary());
        stmt.bindLong(12, entity.getStaffSheBaoBase());
        stmt.bindLong(13, entity.getStaffPublicFundBase());
        stmt.bindString(14, entity.getStaffSubsidyGrade());
        stmt.bindLong(15, entity.getStaffBaseEatSubsidy());
        stmt.bindLong(16, entity.getStaffBaseHouseSubsidy());
        stmt.bindLong(17, entity.getStaffBaseTelSubsidy());
        stmt.bindLong(18, entity.getStaffBaseTrafficSubsidy());
        stmt.bindString(19, entity.getStaffReserved1());
        stmt.bindString(20, entity.getStaffReserved2());
        stmt.bindString(21, entity.getStaffReserved3());
        stmt.bindString(22, entity.getStaffReserved4());
        stmt.bindString(23, entity.getStaffReserved5());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Staff readEntity(Cursor cursor, int offset) {
        Staff entity = new Staff( //
                cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // _id
                cursor.getString(offset + 1), // staffNo
                cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // staffName
                cursor.getString(offset + 3), // staffCardNo
                cursor.getString(offset + 4), // staffEmail
                cursor.getString(offset + 5), // staffTel
                cursor.getString(offset + 6), // staffCompany
                cursor.getString(offset + 7), // staffBumen
                cursor.getString(offset + 8), // staffZhiwu
                cursor.getString(offset + 9), // staffGrade
                cursor.getInt(offset + 10), // staffBaseSalary
                cursor.getInt(offset + 11), // staffShebaoBase
                cursor.getInt(offset + 12), // staffPublicFundBase
                cursor.getString(offset + 13), // staffSubsidyGrade
                cursor.getInt(offset + 14), // staffBaseEatSubsidy
                cursor.getInt(offset + 15), // staffBaseHouseSubsidy
                cursor.getInt(offset + 16), // staffBaseTelSubsidy
                cursor.getInt(offset + 17), // staffBaseTrafficSubsidy
                cursor.getString(offset + 18), // staffReserved1
                cursor.getString(offset + 19), // staffReserved2
                cursor.getString(offset + 20), // staffReserved3
                cursor.getString(offset + 21), // staffReserved4
                cursor.getString(offset + 22) // staffReserved5

        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Staff entity, int offset) {
        entity.set_id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setStaffNO(cursor.getString(offset+1));
        entity.setStaffName(cursor.isNull(offset+2)? null : cursor.getString(offset+2));

        entity.setStaffCardNo(cursor.getString(offset+3));
        entity.setStaffEmail(cursor.getString(offset+4));
        entity.setStaffTel(cursor.getString(offset+5));
        entity.setStaffCompany(cursor.getString(offset+6));
        entity.setStaffBumen(cursor.getString(offset+7));
        entity.setStaffZhiwu(cursor.getString(offset+8));
        entity.setStaffGrade(cursor.getString(offset+9));
        entity.setStaffBaseSalary(cursor.getInt(offset+10));
        entity.setStaffSheBaoBase(cursor.getInt(offset+11));
        entity.setStaffPublicFundBase(cursor.getInt(offset+12));
        entity.setStaffSubsidyGrade(cursor.getString(offset+13));
        entity.setStaffBaseEatSubsidy(cursor.getInt(offset+14));
        entity.setStaffBaseHouseSubsidy(cursor.getInt(offset+15));
        entity.setStaffBaseTelSubsidy(cursor.getInt(offset+16));
        entity.setStaffBaseTrafficSubsidy(cursor.getInt(offset+17));
        entity.setStaffReserved1(cursor.getString(offset+18));
        entity.setStaffReserved2(cursor.getString(offset+19));
        entity.setStaffReserved3(cursor.getString(offset+20));
        entity.setStaffReserved4(cursor.getString(offset+21));
        entity.setStaffReserved5(cursor.getString(offset+22));

     }
    
    @Override
    protected final Long updateKeyAfterInsert(Staff entity, long rowId) {
        entity.set_id(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Staff entity) {
        if(entity != null) {
            return entity.get_id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Staff entity) {
        return entity.get_id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
